import pyb, sensor, image, time, math

thresholds = [(30, 45, 40, 75, 40, 60), # generic_red_thresholds
              (0, 1, 0, 1, 0, 1), # generic_green_thresholds
              (0, 1, 0, 1, 0, 1)] # generic_blue_thresholds

sensor.reset()
sensor.set_pixformat(sensor.RGB565)
sensor.set_framesize(sensor.QVGA)
sensor.skip_frames(time = 2000)
sensor.set_auto_gain(False)
sensor.set_auto_whitebal(False)


clock = time.clock()

red_led = pyb.LED(1)
green_led = pyb.LED(2)
blue_led = pyb.LED(3)

while(True):
    clock.tick()
    img = sensor.snapshot()
    for blob in img.find_blobs(thresholds, pixels_threshold=200, area_threshold=200):

        # These values depend on the blob not being circular - otherwise they will be shaky.
        if blob.elongation() > 0.5:
            img.draw_edges(blob.min_corners(), color=(255,0,0))
            img.draw_line(blob.major_axis_line(), color=(0,255,0))
            img.draw_line(blob.minor_axis_line(), color=(0,0,255))
        # These values are stable all the time.
        img.draw_rectangle(blob.rect())
        img.draw_cross(blob.cx(), blob.cy())
        # Note - the blob rotation is unique to 0-180 only.
        img.draw_keypoints([(blob.cx(), blob.cy(), int(math.degrees(blob.rotation())))], size=20)
        print(blob.code())
        if blob.code() == 1:
            red_led.on()
            text = "RED"
        else:
            red_led.off()
        if blob.code() == 2:
            green_led.on()
            text = "GREEN"
        else:
            green_led.off()
        if blob.code() == 4:
            blue_led.on()
            text = "BLUE"
        else:
            blue_led.off()

